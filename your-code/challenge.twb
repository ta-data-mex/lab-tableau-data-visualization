<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1206.1554                               -->
<workbook original-version='10.4' source-build='10.4.2 (10400.17.1206.1554)' source-platform='win' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='challenge_15653700135610' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='countries-of-the-world' inline='true' name='federated.0thliot0ogi2ab16p2a3r00zt1ls' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='countries-of-the-world' name='textscan.0kt111x1m9hj4m1cwkhx81uxpwoe'>
            <connection class='textscan' directory='D:/Documentos/Ironwero/6/lab-tableau-data-visualization/data' filename='countries-of-the-world.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0kt111x1m9hj4m1cwkhx81uxpwoe' name='countries-of-the-world.csv' table='[countries-of-the-world#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='es_MX' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Area (sq. mi.)' ordinal='3' />
            <column datatype='string' name='Pop. Density (per sq. mi.)' ordinal='4' />
            <column datatype='string' name='Coastline (coast/area ratio)' ordinal='5' />
            <column datatype='string' name='Net migration' ordinal='6' />
            <column datatype='string' name='Infant mortality (per 1000 births)' ordinal='7' />
            <column datatype='integer' name='GDP ($ per capita)' ordinal='8' />
            <column datatype='string' name='Literacy (%)' ordinal='9' />
            <column datatype='string' name='Phones (per 1000)' ordinal='10' />
            <column datatype='string' name='Arable (%)' ordinal='11' />
            <column datatype='string' name='Crops (%)' ordinal='12' />
            <column datatype='string' name='Other (%)' ordinal='13' />
            <column datatype='integer' name='Climate' ordinal='14' />
            <column datatype='string' name='Birthrate' ordinal='15' />
            <column datatype='string' name='Deathrate' ordinal='16' />
            <column datatype='string' name='Agriculture' ordinal='17' />
            <column datatype='string' name='Industry' ordinal='18' />
            <column datatype='string' name='Service' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area (sq. mi.)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area (sq. mi.)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Area (sq. mi.)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop. Density (per sq. mi.)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pop. Density (per sq. mi.)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Pop. Density (per sq. mi.)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coastline (coast/area ratio)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Coastline (coast/area ratio)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Coastline (coast/area ratio)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net migration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Net migration]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Net migration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant mortality (per 1000 births)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Infant mortality (per 1000 births)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Infant mortality (per 1000 births)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP ($ per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP ($ per capita)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>GDP ($ per capita)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Literacy (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Literacy (%)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Literacy (%)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phones (per 1000)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phones (per 1000)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Phones (per 1000)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arable (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Arable (%)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Arable (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crops (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Crops (%)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Crops (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Other (%)]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Other (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Climate]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Climate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthrate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Birthrate]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Birthrate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deathrate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Deathrate]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Deathrate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Agriculture]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Agriculture</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Service]</local-name>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias>Service</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[countries-of-the-world.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;es_MX&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cálculo1' datatype='real' datatype-customized='true' name='[Calculation_2489364714419712003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(REPLACE([Pop. Density (per sq. mi.)], &apos;,&apos;, &apos;.&apos; ))' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='string' name='[Pop. Density (per sq. mi.)]' role='dimension' type='nominal' />
      <column-instance column='[Pop. Density (per sq. mi.)]' derivation='None' name='[none:Pop. Density (per sq. mi.):nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:/Documentos/Ironwero/6/lab-tableau-data-visualization/your-code/countries-of-the-world.tde' schema='Extract' tablename='Extract' update-time='08/08/2019 02:29:56 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_2489364714419712003]' formula='FLOAT(REPLACE([Pop. Density (per sq. mi.)], &apos;,&apos;, &apos;.&apos; ))' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='227' timestamp-start='2019-08-08 14:29:56.144' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Agriculture</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Agriculture]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Agriculture</remote-alias>
              <ordinal>0</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;0,769&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arable (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Arable (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arable (%)</remote-alias>
              <ordinal>1</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>204</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9,75&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>225</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area (sq. mi.)</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Area (sq. mi.)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Area (sq. mi.)</remote-alias>
              <ordinal>2</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>135797519.0</statistic>
                <statistic aggregation='Avg' datatype='real'>598226.95594713651</statistic>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>17075200</statistic>
                <statistic aggregation='Stdev' datatype='real'>1790282.2437336047</statistic>
                <statistic aggregation='StdevP' datatype='real'>1786334.5382818261</statistic>
                <statistic aggregation='Var' datatype='real'>3205110512227.8301</statistic>
                <statistic aggregation='VarP' datatype='real'>3190991082658.5444</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>805592712180033.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Birthrate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Birthrate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Birthrate</remote-alias>
              <ordinal>3</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9,95&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Climate</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Climate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Climate</remote-alias>
              <ordinal>4</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>419.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.1597938144329896</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.70544290924204667</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.70362240837681267</statistic>
                <statistic aggregation='Var' datatype='real'>0.49764969819988247</statistic>
                <statistic aggregation='VarP' datatype='real'>0.49508449356998618</statistic>
                <statistic aggregation='Count' datatype='integer'>194</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1001.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Coastline (coast/area ratio)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Coastline (coast/area ratio)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Coastline (coast/area ratio)</remote-alias>
              <ordinal>5</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0,00&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;92,31&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>6</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>227</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe &quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crops (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Crops (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crops (%)</remote-alias>
              <ordinal>7</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>163</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9,87&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>225</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deathrate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Deathrate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deathrate</remote-alias>
              <ordinal>8</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>202</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10,01&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9,89&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>223</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP ($ per capita)</remote-name>
              <remote-type>3</remote-type>
              <local-name>[GDP ($ per capita)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP ($ per capita)</remote-alias>
              <ordinal>9</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>131</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2189900.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9689.8230088495584</statistic>
                <statistic aggregation='Min' datatype='integer'>500</statistic>
                <statistic aggregation='Max' datatype='integer'>55100</statistic>
                <statistic aggregation='Stdev' datatype='real'>10049.138513197227</statistic>
                <statistic aggregation='StdevP' datatype='real'>10026.881257713425</statistic>
                <statistic aggregation='Var' datatype='real'>100985184.8574238</statistic>
                <statistic aggregation='VarP' datatype='real'>100538347.75628476</statistic>
                <statistic aggregation='Count' datatype='integer'>226</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>43941410000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industry</remote-alias>
              <ordinal>10</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>156</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0,02&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;0,906&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>211</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infant mortality (per 1000 births)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Infant mortality (per 1000 births)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infant mortality (per 1000 births)</remote-alias>
              <ordinal>11</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10,03&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;98,8&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Literacy (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Literacy (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Literacy (%)</remote-alias>
              <ordinal>12</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>141</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100,0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99,9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>209</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net migration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Net migration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net migration</remote-alias>
              <ordinal>13</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>158</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-0,02&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9,61&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>224</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>14</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>227.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>227.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Other (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Other (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Other (%)</remote-alias>
              <ordinal>15</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99,98&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>225</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Phones (per 1000)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Phones (per 1000)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Phones (per 1000)</remote-alias>
              <ordinal>16</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>215</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0,2&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;97,7&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>223</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pop. Density (per sq. mi.)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pop. Density (per sq. mi.)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pop. Density (per sq. mi.)</remote-alias>
              <ordinal>17</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0,0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;99,9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>18</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>227</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6524044551.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28740284.365638766</statistic>
                <statistic aggregation='Min' datatype='integer'>7026</statistic>
                <statistic aggregation='Max' datatype='integer'>1313973713</statistic>
                <statistic aggregation='Stdev' datatype='real'>117891326.54347654</statistic>
                <statistic aggregation='StdevP' datatype='real'>117631367.40343472</statistic>
                <statistic aggregation='Var' datatype='real'>13898364874180616.0</statistic>
                <statistic aggregation='VarP' datatype='real'>13837138597201846.0</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.3285333571746555e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>19</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ASIA (EX. NEAR EAST)         &quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WESTERN EUROPE                     &quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;NEAR EAST                          &quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Service</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Service]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Service</remote-alias>
              <ordinal>20</ordinal>
              <family>countries-of-the-world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>168</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0,062&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;0,954&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>212</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;es&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_2489364714419712003</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_2489364714419712003]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2489364714419712003</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>219</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>86043.700000000041</statistic>
                <statistic aggregation='Avg' datatype='real'>379.04713656387685</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>16271.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>1660.1858246104082</statistic>
                <statistic aggregation='StdevP' datatype='real'>1656.5249914352369</statistic>
                <statistic aggregation='Var' datatype='real'>2756216.9722373411</statistic>
                <statistic aggregation='VarP' datatype='real'>2744075.0472495113</statistic>
                <statistic aggregation='Count' datatype='integer'>227</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>655519653.83000028</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.644231' measure-ordering='alphabetic' measure-percentage='0.355769' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Pop. Density (per sq. mi.):nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;16183,0&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;16271,5&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;6482,2&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;6355,7&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;3989,7&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;3968,8&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;1266,5&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;1196,7&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;1241,0&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;1050,5&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;1023,4&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;838,6&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;785,2&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;649,5&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;640,3&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;608,3&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;632,7&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;538,1&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;496,0&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;479,5&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;454,2&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;419,9&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;396,5&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;397,1&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;372,5&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;340,0&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;337,4&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;328,4&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;333,2&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;324,3&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;318,4&quot;</bucket>
            </map>
            <map to='#c81f3b'>
              <bucket>&quot;316,1&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;312,9&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;308,2&quot;</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>&quot;305,8&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;303,0&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;298,2&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;299,4&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;290,7&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;290,4&quot;</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>&quot;284,8&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;273,5&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;260,8&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;256,1&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;254,4&quot;</bucket>
            </map>
            <map to='#d2293d'>
              <bucket>&quot;250,9&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;247,6&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;231,0&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;230,9&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;212,4&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;207,9&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;206,2&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;193,2&quot;</bucket>
            </map>
            <map to='#d82e3e'>
              <bucket>&quot;193,0&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;192,2&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;191,8&quot;</bucket>
            </map>
            <map to='#d9313f'>
              <bucket>&quot;188,5&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;183,5&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;182,2&quot;</bucket>
            </map>
            <map to='#db333f'>
              <bucket>&quot;179,2&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;173,4&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;172,9&quot;</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>&quot;156,0&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;153,9&quot;</bucket>
            </map>
            <map to='#df3640'>
              <bucket>&quot;153,3&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;152,1&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;151,0&quot;</bucket>
            </map>
            <map to='#e03941'>
              <bucket>&quot;149,9&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;145,3&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;142,7&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;136,9&quot;</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>&quot;135,7&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;132,0&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;132,1&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;131,9&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;130,0&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;129,8&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;127,9&quot;</bucket>
            </map>
            <map to='#e64345'>
              <bucket>&quot;126,5&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;125,7&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;124,6&quot;</bucket>
            </map>
            <map to='#e74646'>
              <bucket>&quot;123,3&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;119,5&quot;</bucket>
            </map>
            <map to='#e84846'>
              <bucket>&quot;114,8&quot;</bucket>
            </map>
            <map to='#e94946'>
              <bucket>&quot;112,9&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;111,4&quot;</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>&quot;111,3&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;109,8&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;107,3&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;106,3&quot;</bucket>
            </map>
            <map to='#eb4e49'>
              <bucket>&quot;104,4&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;102,7&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;102,0&quot;</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>&quot;99,9&quot;</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>&quot;99,2&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;97,7&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;93,9&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;93,6&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;92,5&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;91,9&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;91,4&quot;</bucket>
            </map>
            <map to='#ef594d'>
              <bucket>&quot;90,2&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;89,1&quot;</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>&quot;88,0&quot;</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>&quot;84,8&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;83,7&quot;</bucket>
            </map>
            <map to='#f15e4e'>
              <bucket>&quot;81,0&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;80,9&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;80,0&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;79,5&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;79,8&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;78,8&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;77,4&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;76,7&quot;</bucket>
            </map>
            <map to='#f26653'>
              <bucket>&quot;74,4&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;74,0&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;70,8&quot;</bucket>
            </map>
            <map to='#f36856'>
              <bucket>&quot;69,8&quot;</bucket>
            </map>
            <map to='#f36957'>
              <bucket>&quot;66,9&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;66,6&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;66,3&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;65,9&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;65,8&quot;</bucket>
            </map>
            <map to='#f46e5a'>
              <bucket>&quot;65,5&quot;</bucket>
            </map>
            <map to='#f46f5b'>
              <bucket>&quot;65,4&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;64,0&quot;</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>&quot;62,2&quot;</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>&quot;61,3&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;61,1&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;61,0&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;60,1&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;59,6&quot;</bucket>
            </map>
            <map to='#f67661'>
              <bucket>&quot;58,5&quot;</bucket>
            </map>
            <map to='#f67762'>
              <bucket>&quot;57,8&quot;</bucket>
            </map>
            <map to='#f67763'>
              <bucket>&quot;56,9&quot;</bucket>
            </map>
            <map to='#f67864'>
              <bucket>&quot;55,0&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;54,8&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;54,5&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;51,2&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;50,7&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;49,6&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;49,2&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;48,5&quot;</bucket>
            </map>
            <map to='#f88069'>
              <bucket>&quot;48,0&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;47,8&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;44,9&quot;</bucket>
            </map>
            <map to='#f8826c'>
              <bucket>&quot;43,0&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;41,7&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;40,8&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;40,6&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;39,9&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;39,6&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;39,5&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;39,4&quot;</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>&quot;38,3&quot;</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>&quot;36,5&quot;</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>&quot;36,2&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;35,2&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;33,8&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;31,7&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;31,4&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;31,3&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;31,0&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;29,3&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;29,0&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;28,2&quot;</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>&quot;27,3&quot;</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>&quot;26,9&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;26,7&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;26,3&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;24,6&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;22,1&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;22,0&quot;</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>&quot;21,8&quot;</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>&quot;21,3&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;21,2&quot;</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>&quot;20,0&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;19,5&quot;</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>&quot;19,4&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;19,3&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;18,2&quot;</bucket>
            </map>
            <map to='#fca08d'>
              <bucket>&quot;17,1&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;16,5&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;16,0&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;15,5&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;15,3&quot;</bucket>
            </map>
            <map to='#fda492'>
              <bucket>&quot;15,2&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;14,6&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;14,4&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;14,2&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;13,9&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;13,8&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;12,5&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;12,3&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;11,5&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;10,8&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;10,3&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;9,9&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;9,7&quot;</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>&quot;9,5&quot;</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>&quot;8,4&quot;</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>&quot;8,2&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;7,7&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;6,9&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;5,6&quot;</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>&quot;5,3&quot;</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>&quot;5,1&quot;</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>&quot;3,6&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;3,4&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;3,3&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;3,1&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;2,9&quot;</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>&quot;2,7&quot;</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>&quot;2,6&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;2,5&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;2,2&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;1,8&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;1,0&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;0,0&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;México&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Area (sq. mi.)' />
        <field-sort-custom-order field='Pop. Density (per sq. mi.)' />
        <field-sort-custom-order field='Calculation_2489364714419712003' />
        <field-sort-custom-order field='Pop. Density (per sq. mi.) - División 1' />
        <field-sort-custom-order field='Pop. Density (per sq. mi.) - División 2' />
        <field-sort-custom-order field='Coastline (coast/area ratio)' />
        <field-sort-custom-order field='Net migration' />
        <field-sort-custom-order field='Infant mortality (per 1000 births)' />
        <field-sort-custom-order field='GDP ($ per capita)' />
        <field-sort-custom-order field='Literacy (%)' />
        <field-sort-custom-order field='Phones (per 1000)' />
        <field-sort-custom-order field='Arable (%)' />
        <field-sort-custom-order field='Crops (%)' />
        <field-sort-custom-order field='Other (%)' />
        <field-sort-custom-order field='Climate' />
        <field-sort-custom-order field='Birthrate' />
        <field-sort-custom-order field='Deathrate' />
        <field-sort-custom-order field='Agriculture' />
        <field-sort-custom-order field='Industry' />
        <field-sort-custom-order field='Service' />
        <field-sort-custom-order field='Calculation_2489364714411937794' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP Per Capital'>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-of-the-world' name='federated.0thliot0ogi2ab16p2a3r00zt1ls' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0thliot0ogi2ab16p2a3r00zt1ls'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[GDP ($ per capita)]' role='measure' type='quantitative' />
            <column-instance column='[GDP ($ per capita)]' derivation='Avg' name='[avg:GDP ($ per capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Longitude (generated)]' field-type='quantitative' max='21682804.241793178' min='-18183004.120020688' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Latitude (generated)]' field-type='quantitative' max='17545510.024793215' min='-6095030.5606089458' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[avg:GDP ($ per capita):qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[avg:GDP ($ per capita):qk]' />
              <lod column='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Country:nk]' />
              <geometry column='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Latitude (generated)]</rows>
        <cols>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Pop. Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='countries-of-the-world' name='federated.0thliot0ogi2ab16p2a3r00zt1ls' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0thliot0ogi2ab16p2a3r00zt1ls'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Pop. Density (per sq. mi.)]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pop. Density (per sq. mi.)]' derivation='None' name='[none:Pop. Density (per sq. mi.):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Pop. Density (per sq. mi.):nk]'>
            <groupfilter function='level-members' level='[none:Pop. Density (per sq. mi.):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Pop. Density (per sq. mi.):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Longitude (generated)]' field-type='quantitative' max='-7336432.2200494409' min='-70493330.062929347' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Latitude (generated)]' field-type='quantitative' max='21472090.740870371' min='-18381517.012743592' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Pop. Density (per sq. mi.):nk]' />
              <lod column='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Country:nk]' />
              <geometry column='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Latitude (generated)]</rows>
        <cols>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[Longitude (generated)]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[min:Pop. Density (per sq. mi.):nk]</column>
            <column>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[sum:Calculation_2489364714419712003:ok]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='GDP Per Capital'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card pane-specification-id='0' param='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[avg:GDP ($ per capita):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[attr:Country:nk]</field>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[attr:Pop. Density (per sq. mi.):nk]</field>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[avg:GDP ($ per capita):qk]</field>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Country:nk]</field>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[sum:Calculation_2489364714411937794:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Pop. Density'>
      <cards>
        <edge name='left'>
          <strip size='272'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Pop. Density (per sq. mi.):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[ctd:Pop. Density (per sq. mi.):ok]</field>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[min:Pop. Density (per sq. mi.):nk]</field>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Country:nk]</field>
            <field>[federated.0thliot0ogi2ab16p2a3r00zt1ls].[none:Pop. Density (per sq. mi.):nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP Per Capital' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pop. Density' width='192'>
      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
      UAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
